<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.jushi.mapper.UserMapper">
  <resultMap id="BaseResultMap" type="com.example.jushi.model.User">
    <id column="uid" jdbcType="INTEGER" property="uid" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="CHAR" property="password" />
    <result column="salt" jdbcType="VARCHAR" property="salt" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="gender" jdbcType="INTEGER" property="gender" />
    <result column="avatar" jdbcType="VARCHAR" property="avatar" />
    <result column="create_user" jdbcType="VARCHAR" property="createUser" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="modif_user" jdbcType="VARCHAR" property="modifUser" />
    <result column="modif_time" jdbcType="TIMESTAMP" property="modifTime" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where uid = #{uid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.jushi.model.User">
    insert into user (uid, username, password,salt,
      phone, email, gender, 
      avatar, create_user, create_time, 
      modif_user, modif_time)
    values (#{uid,jdbcType=INTEGER},#{username,jdbcType=VARCHAR},#{password,jdbcType=CHAR},
            #{salt,jdbcType=VARCHAR},#{phone,jdbcType=VARCHAR},#{email,jdbcType=VARCHAR},#{gender,jdbcType=INTEGER},
            #{avatar,jdbcType=VARCHAR},#{createUser,jdbcType=VARCHAR},#{createTime,jdbcType=TIMESTAMP},
            #{modifUser,jdbcType=VARCHAR},#{modifTime,jdbcType=TIMESTAMP})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.example.jushi.model.User">
    update user
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=CHAR},
      salt = #{salt,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=INTEGER},
      avatar = #{avatar,jdbcType=VARCHAR},
      create_user = #{createUser,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modif_user = #{modifUser,jdbcType=VARCHAR},
      modif_time = #{modifTime,jdbcType=TIMESTAMP}
    where uid = #{uid,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select uid, username, password,salt, phone, email, gender, avatar, create_user, create_time,
    modif_user, modif_time
    from user
    where uid = #{uid,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select uid, username, password,salt, phone, email, gender, avatar, create_user, create_time,
    modif_user, modif_time
    from user
  </select>

  <!--获取用户信息-->
  <select id="selectUser" resultMap="BaseResultMap">
    select uid, username, password
    from user
    where username = #{userName,jdbcType=VARCHAR} and passWord = #{passWord,jdbcType=VARCHAR}
  </select>

  <!-- 获取用户信息 -->
  <select id="findUserName" resultMap="BaseResultMap">
    select *
    from user
    where username = #{userName,jdbcType=VARCHAR}
  </select>
  
  <!--根据uid查询用户信息-->
  <select id="findUserByPrimaryKey" resultMap="BaseResultMap">
    select * 
    from user
    where uid = #{uid,jdbcType=INTEGER}
  </select>
  
  <!--更新用户密码-->
  <update id="updatePassword" >
    update user
    set password = #{password,jdbcType=CHAR},
    modif_user = #{modifUser,jdbcType=VARCHAR},
    modif_time = #{modifTime,jdbcType=TIMESTAMP}
    where uid = #{uid,jdbcType=INTEGER}
  </update>

  <!--修改用户资料-->
  <update id="updateUserInfoByPrimaryKey" parameterType="com.example.jushi.model.User">
    update user
    set
        <if test="phone != null"> phone = #{phone,jdbcType=VARCHAR}, </if>
        <if test="email != null"> email = #{email,jdbcType=VARCHAR},</if>
        <if test="gender != null" > gender = #{gender,jdbcType=INTEGER},</if>
        modif_user = #{modifUser,jdbcType=VARCHAR},
        modif_time = #{modifTime,jdbcType=TIMESTAMP}
    where uid = #{uid,jdbcType=INTEGER}
  </update>

  <!--修改用户头像-->
  <update id="updateUserAvatar" parameterType="com.example.jushi.model.User">
    update user set
      avatar = #{avatar,jdbcType=VARCHAR},
      modif_user = #{modifUser,jdbcType=VARCHAR},
      modif_time = #{modifTime,jdbcType=TIMESTAMP}
    where uid = #{uid,jdbcType=INTEGER}
  </update>

</mapper>